#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/optimize_performance.sh

echo "‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."

# 1. –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
echo "üì¶ –°–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
docker-compose exec web python manage.py collectstatic --noinput

# 2. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏
echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏..."
docker-compose exec web python manage.py migrate

# 3. –°–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è —Å—Ç–∞—Ç–∏–∫–∏
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è —Å—Ç–∞—Ç–∏–∫–∏..."
docker-compose exec web python manage.py compress

# 4. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
docker-compose exec web python manage.py clear_cache

# 5. –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
echo "üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
docker-compose exec web python manage.py shell -c "
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(is_superuser=True).exists():
    User.objects.create_superuser('admin', 'admin@example.com', 'admin123')
    print('‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: admin/admin123')
else:
    print('‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
"

# 6. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ë–î..."
docker-compose exec web python manage.py shell -c "
from django.db import connection
from django.conf import settings

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
with connection.cursor() as cursor:
    cursor.execute(\"\"\"
        SELECT schemaname, tablename, indexname, indexdef 
        FROM pg_indexes 
        WHERE schemaname = 'public'
        ORDER BY tablename, indexname;
    \"\"\")
    
    indexes = cursor.fetchall()
    print(f'üìà –ù–∞–π–¥–µ–Ω–æ {len(indexes)} –∏–Ω–¥–µ–∫—Å–æ–≤')
    
    for index in indexes:
        print(f'  ‚Ä¢ {index[1]}.{index[2]}')
"

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞ Redis
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞ Redis..."
docker-compose exec redis redis-cli ping
docker-compose exec redis redis-cli info memory

echo "‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:"
echo "  ‚Ä¢ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–∂–∞—Ç—ã –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã"
echo "  ‚Ä¢ –ò–Ω–¥–µ–∫—Å—ã –ë–î —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
echo "  ‚Ä¢ Redis –∫—ç—à –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –∫–æ–º–ø—Ä–µ—Å—Å–∏–µ–π"
echo "  ‚Ä¢ Nginx –∫—ç—à–∏—Ä—É–µ—Ç API –æ—Ç–≤–µ—Ç—ã"
echo ""
echo "üöÄ –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:"
echo "  ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ Grafana: http://localhost:3000"
echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ Prometheus: http://localhost:9090"
echo "  ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API: curl http://localhost:8000/api/cottages/"
